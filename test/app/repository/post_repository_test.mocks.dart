// Mocks generated by Mockito 5.1.0 from annotations
// in miio_test/test/app/repository/post_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i2;
import 'package:miio_test/app/ui/home/repository/post_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeDio_0 extends _i1.Fake implements _i2.Dio {}

class _FakeResponse_1<T> extends _i1.Fake implements _i2.Response<T> {}

/// A class which mocks [PostRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostRepository extends _i1.Mock implements _i3.PostRepository {
  MockPostRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get url =>
      (super.noSuchMethod(Invocation.getter(#url), returnValue: '') as String);
  @override
  set url(String? _url) => super.noSuchMethod(Invocation.setter(#url, _url),
      returnValueForMissingStub: null);
  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(Invocation.getter(#dio), returnValue: _FakeDio_0())
          as _i2.Dio);
  @override
  set dio(_i2.Dio? _dio) => super.noSuchMethod(Invocation.setter(#dio, _dio),
      returnValueForMissingStub: null);
  @override
  _i4.Future<_i2.Response<dynamic>> getData() => (super.noSuchMethod(
          Invocation.method(#getData, []),
          returnValue:
              Future<_i2.Response<dynamic>>.value(_FakeResponse_1<dynamic>()))
      as _i4.Future<_i2.Response<dynamic>>);
}
