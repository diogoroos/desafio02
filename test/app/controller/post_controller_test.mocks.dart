// Mocks generated by Mockito 5.1.0 from annotations
// in miio_test/test/app/controller/post_controller_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:miio_test/app/controller/post_controller.dart' as _i3;
import 'package:miio_test/app/model/post_model.dart' as _i4;
import 'package:miio_test/app/repository/post_repository.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeIPostRepository_0 extends _i1.Fake implements _i2.IPostRepository {}

/// A class which mocks [PostController].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostController extends _i1.Mock implements _i3.PostController {
  MockPostController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set listaPosts(List<_i4.PostModel>? _listaPosts) =>
      super.noSuchMethod(Invocation.setter(#listaPosts, _listaPosts),
          returnValueForMissingStub: null);
  @override
  _i2.IPostRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeIPostRepository_0()) as _i2.IPostRepository);
  @override
  set repository(_i2.IPostRepository? _repository) =>
      super.noSuchMethod(Invocation.setter(#repository, _repository),
          returnValueForMissingStub: null);
  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);
  @override
  set isLoading(bool? _isLoading) =>
      super.noSuchMethod(Invocation.setter(#isLoading, _isLoading),
          returnValueForMissingStub: null);
  @override
  _i5.Future<void> buscaDados() =>
      (super.noSuchMethod(Invocation.method(#buscaDados, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  void resetaDados() => super.noSuchMethod(Invocation.method(#resetaDados, []),
      returnValueForMissingStub: null);
}
